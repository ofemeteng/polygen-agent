"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/chat";
exports.ids = ["pages/api/chat"];
exports.modules = {

/***/ "@coinbase/agentkit":
/*!*************************************!*\
  !*** external "@coinbase/agentkit" ***!
  \*************************************/
/***/ ((module) => {

module.exports = require("@coinbase/agentkit");

/***/ }),

/***/ "@coinbase/agentkit-langchain":
/*!***********************************************!*\
  !*** external "@coinbase/agentkit-langchain" ***!
  \***********************************************/
/***/ ((module) => {

module.exports = require("@coinbase/agentkit-langchain");

/***/ }),

/***/ "dotenv":
/*!*************************!*\
  !*** external "dotenv" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("dotenv");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "readline":
/*!***************************!*\
  !*** external "readline" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("readline");

/***/ }),

/***/ "@langchain/core/messages":
/*!*******************************************!*\
  !*** external "@langchain/core/messages" ***!
  \*******************************************/
/***/ ((module) => {

module.exports = import("@langchain/core/messages");;

/***/ }),

/***/ "@langchain/langgraph":
/*!***************************************!*\
  !*** external "@langchain/langgraph" ***!
  \***************************************/
/***/ ((module) => {

module.exports = import("@langchain/langgraph");;

/***/ }),

/***/ "@langchain/langgraph/prebuilt":
/*!************************************************!*\
  !*** external "@langchain/langgraph/prebuilt" ***!
  \************************************************/
/***/ ((module) => {

module.exports = import("@langchain/langgraph/prebuilt");;

/***/ }),

/***/ "@langchain/openai":
/*!************************************!*\
  !*** external "@langchain/openai" ***!
  \************************************/
/***/ ((module) => {

module.exports = import("@langchain/openai");;

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

module.exports = import("axios");;

/***/ }),

/***/ "thirdweb":
/*!***************************!*\
  !*** external "thirdweb" ***!
  \***************************/
/***/ ((module) => {

module.exports = import("thirdweb");;

/***/ }),

/***/ "thirdweb/chains":
/*!**********************************!*\
  !*** external "thirdweb/chains" ***!
  \**********************************/
/***/ ((module) => {

module.exports = import("thirdweb/chains");;

/***/ }),

/***/ "thirdweb/storage":
/*!***********************************!*\
  !*** external "thirdweb/storage" ***!
  \***********************************/
/***/ ((module) => {

module.exports = import("thirdweb/storage");;

/***/ }),

/***/ "thirdweb/wallets":
/*!***********************************!*\
  !*** external "thirdweb/wallets" ***!
  \***********************************/
/***/ ((module) => {

module.exports = import("thirdweb/wallets");;

/***/ }),

/***/ "zod":
/*!**********************!*\
  !*** external "zod" ***!
  \**********************/
/***/ ((module) => {

module.exports = import("zod");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fchat.ts&middlewareConfigBase64=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fchat.ts&middlewareConfigBase64=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_chat_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/chat.ts */ \"(api)/./pages/api/chat.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_chat_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_chat_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_chat_ts__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_chat_ts__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/chat\",\n        pathname: \"/api/chat\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_chat_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmNoYXQmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyUyRmFwaSUyRmNoYXQudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ0U7QUFDMUQ7QUFDZ0Q7QUFDaEQ7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLCtDQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQywrQ0FBUTtBQUNwQztBQUNPLHdCQUF3Qix5R0FBbUI7QUFDbEQ7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQscUMiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2FwaS9jaGF0LnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsICdkZWZhdWx0Jyk7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCAnY29uZmlnJyk7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9jaGF0XCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvY2hhdFwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6ICcnLFxuICAgICAgICBmaWxlbmFtZTogJydcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fchat.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./actions/generate3DAsset.ts":
/*!************************************!*\
  !*** ./actions/generate3DAsset.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generate3DAsset: () => (/* binding */ generate3DAsset)\n/* harmony export */ });\n/* harmony import */ var _coinbase_agentkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @coinbase/agentkit */ \"@coinbase/agentkit\");\n/* harmony import */ var _coinbase_agentkit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_coinbase_agentkit__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zod */ \"zod\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"axios\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([zod__WEBPACK_IMPORTED_MODULE_1__, axios__WEBPACK_IMPORTED_MODULE_2__]);\n([zod__WEBPACK_IMPORTED_MODULE_1__, axios__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n// Define the schema for the text-to-3d action\nconst TextTo3DSchema = zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    prompt: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().describe(\"Text description of the 3D model to generate\"),\n    artStyle: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional().describe(\"Optional art style for the 3D model (e.g., 'realistic', 'cartoon')\"),\n    negativePrompt: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional().describe(\"Optional negative prompt to exclude certain characteristics\")\n});\n// Create the Meshy text-to-3d action provider\nconst generate3DAsset = (0,_coinbase_agentkit__WEBPACK_IMPORTED_MODULE_0__.customActionProvider)({\n    name: \"generate_3d_model\",\n    description: \"Generate a 3D model from a text prompt using Meshy.ai\",\n    schema: TextTo3DSchema,\n    invoke: async (_, args)=>{\n        // Ensure API key is set\n        const apiKey = process.env.MESHY_API_KEY;\n        if (!apiKey) {\n            return \"Error: MESHY_API_KEY environment variable is not set\";\n        }\n        try {\n            // 1. Create preview task\n            const generatePreviewRequest = {\n                mode: \"preview\",\n                prompt: args.prompt,\n                negative_prompt: args.negativePrompt || \"low quality, low resolution, low poly, ugly\",\n                art_style: args.artStyle || \"realistic\",\n                should_remesh: true\n            };\n            const generatePreviewResponse = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(\"https://api.meshy.ai/openapi/v2/text-to-3d\", generatePreviewRequest, {\n                headers: {\n                    \"Authorization\": `Bearer ${apiKey}`,\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            const previewTaskId = generatePreviewResponse.data.result;\n            // 2. Poll for task completion\n            let previewTask;\n            const maxAttempts = 60; // 5 minutes max (5s * 60)\n            for(let i = 0; i < maxAttempts; i++){\n                const previewTaskResponse = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(`https://api.meshy.ai/openapi/v2/text-to-3d/${previewTaskId}`, {\n                    headers: {\n                        \"Authorization\": `Bearer ${apiKey}`\n                    }\n                });\n                previewTask = previewTaskResponse.data;\n                if (previewTask.status === \"SUCCEEDED\") {\n                    break;\n                }\n                if (previewTask.status === \"FAILED\") {\n                    return `3D model generation failed: ${previewTask.error_message || \"Unknown error\"}`;\n                }\n                // Wait 5 seconds before next poll\n                await new Promise((resolve)=>setTimeout(resolve, 5000));\n            }\n            // Check if task timed out\n            if (previewTask.status !== \"SUCCEEDED\") {\n                return \"3D model generation timed out. Please try again.\";\n            }\n            // 3. Return model information\n            return JSON.stringify({\n                taskId: previewTaskId,\n                modelUrls: previewTask.model_urls,\n                status: previewTask.status\n            }, null, 2);\n        } catch (error) {\n            console.error(\"Error in Meshy 3D model generation:\", error);\n            if (axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isAxiosError(error)) {\n                return `API Error: ${error.response?.data?.message || error.message}`;\n            }\n            return \"An unexpected error occurred during 3D model generation\";\n        }\n    }\n});\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9hY3Rpb25zL2dlbmVyYXRlM0RBc3NldC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUc0QjtBQUNKO0FBQ0U7QUFFMUIsOENBQThDO0FBQzlDLE1BQU1HLGlCQUFpQkYsa0NBQUNBLENBQUNHLE1BQU0sQ0FBQztJQUM5QkMsUUFBUUosa0NBQUNBLENBQUNLLE1BQU0sR0FBR0MsUUFBUSxDQUFDO0lBQzVCQyxVQUFVUCxrQ0FBQ0EsQ0FBQ0ssTUFBTSxHQUFHRyxRQUFRLEdBQUdGLFFBQVEsQ0FBQztJQUN6Q0csZ0JBQWdCVCxrQ0FBQ0EsQ0FBQ0ssTUFBTSxHQUFHRyxRQUFRLEdBQUdGLFFBQVEsQ0FBQztBQUNqRDtBQUVBLDhDQUE4QztBQUN2QyxNQUFNSSxrQkFBa0JYLHdFQUFvQkEsQ0FBaUI7SUFDbEVZLE1BQU07SUFDTkMsYUFBYTtJQUNiQyxRQUFRWDtJQUVSWSxRQUFRLE9BQU9DLEdBQUdDO1FBQ2hCLHdCQUF3QjtRQUN4QixNQUFNQyxTQUFTQyxRQUFRQyxHQUFHLENBQUNDLGFBQWE7UUFDeEMsSUFBSSxDQUFDSCxRQUFRO1lBQ1gsT0FBTztRQUNUO1FBRUEsSUFBSTtZQUNGLHlCQUF5QjtZQUN6QixNQUFNSSx5QkFBeUI7Z0JBQzdCQyxNQUFNO2dCQUNObEIsUUFBUVksS0FBS1osTUFBTTtnQkFDbkJtQixpQkFBaUJQLEtBQUtQLGNBQWMsSUFBSTtnQkFDeENlLFdBQVdSLEtBQUtULFFBQVEsSUFBSTtnQkFDNUJrQixlQUFlO1lBQ2pCO1lBRUEsTUFBTUMsMEJBQTBCLE1BQU16QixrREFBVSxDQUM5Qyw4Q0FDQW9CLHdCQUNBO2dCQUNFTyxTQUFTO29CQUNQLGlCQUFpQixDQUFDLE9BQU8sRUFBRVgsUUFBUTtvQkFDbkMsZ0JBQWdCO2dCQUNsQjtZQUNGO1lBR0YsTUFBTVksZ0JBQWdCSCx3QkFBd0JJLElBQUksQ0FBQ0MsTUFBTTtZQUV6RCw4QkFBOEI7WUFDOUIsSUFBSUM7WUFDSixNQUFNQyxjQUFjLElBQUksMEJBQTBCO1lBQ2xELElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJRCxhQUFhQyxJQUFLO2dCQUNwQyxNQUFNQyxzQkFBc0IsTUFBTWxDLGlEQUFTLENBQ3pDLENBQUMsMkNBQTJDLEVBQUU0QixlQUFlLEVBQzdEO29CQUNFRCxTQUFTO3dCQUNQLGlCQUFpQixDQUFDLE9BQU8sRUFBRVgsUUFBUTtvQkFDckM7Z0JBQ0Y7Z0JBR0ZlLGNBQWNHLG9CQUFvQkwsSUFBSTtnQkFFdEMsSUFBSUUsWUFBWUssTUFBTSxLQUFLLGFBQWE7b0JBQ3RDO2dCQUNGO2dCQUVBLElBQUlMLFlBQVlLLE1BQU0sS0FBSyxVQUFVO29CQUNuQyxPQUFPLENBQUMsNEJBQTRCLEVBQUVMLFlBQVlNLGFBQWEsSUFBSSxpQkFBaUI7Z0JBQ3RGO2dCQUVBLGtDQUFrQztnQkFDbEMsTUFBTSxJQUFJQyxRQUFRQyxDQUFBQSxVQUFXQyxXQUFXRCxTQUFTO1lBQ25EO1lBRUEsMEJBQTBCO1lBQzFCLElBQUlSLFlBQVlLLE1BQU0sS0FBSyxhQUFhO2dCQUN0QyxPQUFPO1lBQ1Q7WUFFQSw4QkFBOEI7WUFDOUIsT0FBT0ssS0FBS0MsU0FBUyxDQUFDO2dCQUNwQkMsUUFBUWY7Z0JBQ1JnQixXQUFXYixZQUFZYyxVQUFVO2dCQUNqQ1QsUUFBUUwsWUFBWUssTUFBTTtZQUM1QixHQUFHLE1BQU07UUFFWCxFQUFFLE9BQU9VLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLHVDQUF1Q0E7WUFFckQsSUFBSTlDLDBEQUFrQixDQUFDOEMsUUFBUTtnQkFDN0IsT0FBTyxDQUFDLFdBQVcsRUFBRUEsTUFBTUcsUUFBUSxFQUFFcEIsTUFBTXFCLFdBQVdKLE1BQU1JLE9BQU8sRUFBRTtZQUN2RTtZQUVBLE9BQU87UUFDVDtJQUNGO0FBQ0YsR0FBRyIsInNvdXJjZXMiOlsiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9hY3Rpb25zL2dlbmVyYXRlM0RBc3NldC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBcbiAgY3VzdG9tQWN0aW9uUHJvdmlkZXIsIFxuICBXYWxsZXRQcm92aWRlciBcbn0gZnJvbSBcIkBjb2luYmFzZS9hZ2VudGtpdFwiO1xuaW1wb3J0IHsgeiB9IGZyb20gXCJ6b2RcIjtcbmltcG9ydCBheGlvcyBmcm9tIFwiYXhpb3NcIjtcblxuLy8gRGVmaW5lIHRoZSBzY2hlbWEgZm9yIHRoZSB0ZXh0LXRvLTNkIGFjdGlvblxuY29uc3QgVGV4dFRvM0RTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIHByb21wdDogei5zdHJpbmcoKS5kZXNjcmliZShcIlRleHQgZGVzY3JpcHRpb24gb2YgdGhlIDNEIG1vZGVsIHRvIGdlbmVyYXRlXCIpLFxuICBhcnRTdHlsZTogei5zdHJpbmcoKS5vcHRpb25hbCgpLmRlc2NyaWJlKFwiT3B0aW9uYWwgYXJ0IHN0eWxlIGZvciB0aGUgM0QgbW9kZWwgKGUuZy4sICdyZWFsaXN0aWMnLCAnY2FydG9vbicpXCIpLFxuICBuZWdhdGl2ZVByb21wdDogei5zdHJpbmcoKS5vcHRpb25hbCgpLmRlc2NyaWJlKFwiT3B0aW9uYWwgbmVnYXRpdmUgcHJvbXB0IHRvIGV4Y2x1ZGUgY2VydGFpbiBjaGFyYWN0ZXJpc3RpY3NcIiksXG59KTtcblxuLy8gQ3JlYXRlIHRoZSBNZXNoeSB0ZXh0LXRvLTNkIGFjdGlvbiBwcm92aWRlclxuZXhwb3J0IGNvbnN0IGdlbmVyYXRlM0RBc3NldCA9IGN1c3RvbUFjdGlvblByb3ZpZGVyPFdhbGxldFByb3ZpZGVyPih7XG4gIG5hbWU6IFwiZ2VuZXJhdGVfM2RfbW9kZWxcIixcbiAgZGVzY3JpcHRpb246IFwiR2VuZXJhdGUgYSAzRCBtb2RlbCBmcm9tIGEgdGV4dCBwcm9tcHQgdXNpbmcgTWVzaHkuYWlcIixcbiAgc2NoZW1hOiBUZXh0VG8zRFNjaGVtYSxcblxuICBpbnZva2U6IGFzeW5jIChfLCBhcmdzOiB6LmluZmVyPHR5cGVvZiBUZXh0VG8zRFNjaGVtYT4pID0+IHtcbiAgICAvLyBFbnN1cmUgQVBJIGtleSBpcyBzZXRcbiAgICBjb25zdCBhcGlLZXkgPSBwcm9jZXNzLmVudi5NRVNIWV9BUElfS0VZO1xuICAgIGlmICghYXBpS2V5KSB7XG4gICAgICByZXR1cm4gXCJFcnJvcjogTUVTSFlfQVBJX0tFWSBlbnZpcm9ubWVudCB2YXJpYWJsZSBpcyBub3Qgc2V0XCI7XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIC8vIDEuIENyZWF0ZSBwcmV2aWV3IHRhc2tcbiAgICAgIGNvbnN0IGdlbmVyYXRlUHJldmlld1JlcXVlc3QgPSB7XG4gICAgICAgIG1vZGU6IFwicHJldmlld1wiLFxuICAgICAgICBwcm9tcHQ6IGFyZ3MucHJvbXB0LFxuICAgICAgICBuZWdhdGl2ZV9wcm9tcHQ6IGFyZ3MubmVnYXRpdmVQcm9tcHQgfHwgXCJsb3cgcXVhbGl0eSwgbG93IHJlc29sdXRpb24sIGxvdyBwb2x5LCB1Z2x5XCIsXG4gICAgICAgIGFydF9zdHlsZTogYXJncy5hcnRTdHlsZSB8fCBcInJlYWxpc3RpY1wiLFxuICAgICAgICBzaG91bGRfcmVtZXNoOiB0cnVlLFxuICAgICAgfTtcblxuICAgICAgY29uc3QgZ2VuZXJhdGVQcmV2aWV3UmVzcG9uc2UgPSBhd2FpdCBheGlvcy5wb3N0KFxuICAgICAgICBcImh0dHBzOi8vYXBpLm1lc2h5LmFpL29wZW5hcGkvdjIvdGV4dC10by0zZFwiLFxuICAgICAgICBnZW5lcmF0ZVByZXZpZXdSZXF1ZXN0LFxuICAgICAgICB7XG4gICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgXCJBdXRob3JpemF0aW9uXCI6IGBCZWFyZXIgJHthcGlLZXl9YCxcbiAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICApO1xuXG4gICAgICBjb25zdCBwcmV2aWV3VGFza0lkID0gZ2VuZXJhdGVQcmV2aWV3UmVzcG9uc2UuZGF0YS5yZXN1bHQ7XG5cbiAgICAgIC8vIDIuIFBvbGwgZm9yIHRhc2sgY29tcGxldGlvblxuICAgICAgbGV0IHByZXZpZXdUYXNrO1xuICAgICAgY29uc3QgbWF4QXR0ZW1wdHMgPSA2MDsgLy8gNSBtaW51dGVzIG1heCAoNXMgKiA2MClcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbWF4QXR0ZW1wdHM7IGkrKykge1xuICAgICAgICBjb25zdCBwcmV2aWV3VGFza1Jlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KFxuICAgICAgICAgIGBodHRwczovL2FwaS5tZXNoeS5haS9vcGVuYXBpL3YyL3RleHQtdG8tM2QvJHtwcmV2aWV3VGFza0lkfWAsXG4gICAgICAgICAge1xuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICBcIkF1dGhvcml6YXRpb25cIjogYEJlYXJlciAke2FwaUtleX1gXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICApO1xuXG4gICAgICAgIHByZXZpZXdUYXNrID0gcHJldmlld1Rhc2tSZXNwb25zZS5kYXRhO1xuXG4gICAgICAgIGlmIChwcmV2aWV3VGFzay5zdGF0dXMgPT09IFwiU1VDQ0VFREVEXCIpIHtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChwcmV2aWV3VGFzay5zdGF0dXMgPT09IFwiRkFJTEVEXCIpIHtcbiAgICAgICAgICByZXR1cm4gYDNEIG1vZGVsIGdlbmVyYXRpb24gZmFpbGVkOiAke3ByZXZpZXdUYXNrLmVycm9yX21lc3NhZ2UgfHwgXCJVbmtub3duIGVycm9yXCJ9YDtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFdhaXQgNSBzZWNvbmRzIGJlZm9yZSBuZXh0IHBvbGxcbiAgICAgICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDUwMDApKTtcbiAgICAgIH1cblxuICAgICAgLy8gQ2hlY2sgaWYgdGFzayB0aW1lZCBvdXRcbiAgICAgIGlmIChwcmV2aWV3VGFzay5zdGF0dXMgIT09IFwiU1VDQ0VFREVEXCIpIHtcbiAgICAgICAgcmV0dXJuIFwiM0QgbW9kZWwgZ2VuZXJhdGlvbiB0aW1lZCBvdXQuIFBsZWFzZSB0cnkgYWdhaW4uXCI7XG4gICAgICB9XG5cbiAgICAgIC8vIDMuIFJldHVybiBtb2RlbCBpbmZvcm1hdGlvblxuICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgdGFza0lkOiBwcmV2aWV3VGFza0lkLFxuICAgICAgICBtb2RlbFVybHM6IHByZXZpZXdUYXNrLm1vZGVsX3VybHMsXG4gICAgICAgIHN0YXR1czogcHJldmlld1Rhc2suc3RhdHVzXG4gICAgICB9LCBudWxsLCAyKTtcblxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgaW4gTWVzaHkgM0QgbW9kZWwgZ2VuZXJhdGlvbjpcIiwgZXJyb3IpO1xuXG4gICAgICBpZiAoYXhpb3MuaXNBeGlvc0Vycm9yKGVycm9yKSkge1xuICAgICAgICByZXR1cm4gYEFQSSBFcnJvcjogJHtlcnJvci5yZXNwb25zZT8uZGF0YT8ubWVzc2FnZSB8fCBlcnJvci5tZXNzYWdlfWA7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBcIkFuIHVuZXhwZWN0ZWQgZXJyb3Igb2NjdXJyZWQgZHVyaW5nIDNEIG1vZGVsIGdlbmVyYXRpb25cIjtcbiAgICB9XG4gIH1cbn0pOyJdLCJuYW1lcyI6WyJjdXN0b21BY3Rpb25Qcm92aWRlciIsInoiLCJheGlvcyIsIlRleHRUbzNEU2NoZW1hIiwib2JqZWN0IiwicHJvbXB0Iiwic3RyaW5nIiwiZGVzY3JpYmUiLCJhcnRTdHlsZSIsIm9wdGlvbmFsIiwibmVnYXRpdmVQcm9tcHQiLCJnZW5lcmF0ZTNEQXNzZXQiLCJuYW1lIiwiZGVzY3JpcHRpb24iLCJzY2hlbWEiLCJpbnZva2UiLCJfIiwiYXJncyIsImFwaUtleSIsInByb2Nlc3MiLCJlbnYiLCJNRVNIWV9BUElfS0VZIiwiZ2VuZXJhdGVQcmV2aWV3UmVxdWVzdCIsIm1vZGUiLCJuZWdhdGl2ZV9wcm9tcHQiLCJhcnRfc3R5bGUiLCJzaG91bGRfcmVtZXNoIiwiZ2VuZXJhdGVQcmV2aWV3UmVzcG9uc2UiLCJwb3N0IiwiaGVhZGVycyIsInByZXZpZXdUYXNrSWQiLCJkYXRhIiwicmVzdWx0IiwicHJldmlld1Rhc2siLCJtYXhBdHRlbXB0cyIsImkiLCJwcmV2aWV3VGFza1Jlc3BvbnNlIiwiZ2V0Iiwic3RhdHVzIiwiZXJyb3JfbWVzc2FnZSIsIlByb21pc2UiLCJyZXNvbHZlIiwic2V0VGltZW91dCIsIkpTT04iLCJzdHJpbmdpZnkiLCJ0YXNrSWQiLCJtb2RlbFVybHMiLCJtb2RlbF91cmxzIiwiZXJyb3IiLCJjb25zb2xlIiwiaXNBeGlvc0Vycm9yIiwicmVzcG9uc2UiLCJtZXNzYWdlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./actions/generate3DAsset.ts\n");

/***/ }),

/***/ "(api)/./actions/mintNFT.ts":
/*!****************************!*\
  !*** ./actions/mintNFT.ts ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mintNFT: () => (/* binding */ mintNFT)\n/* harmony export */ });\n/* harmony import */ var _coinbase_agentkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @coinbase/agentkit */ \"@coinbase/agentkit\");\n/* harmony import */ var _coinbase_agentkit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_coinbase_agentkit__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zod */ \"zod\");\n/* harmony import */ var thirdweb__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! thirdweb */ \"thirdweb\");\n/* harmony import */ var thirdweb_wallets__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! thirdweb/wallets */ \"thirdweb/wallets\");\n/* harmony import */ var thirdweb_chains__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! thirdweb/chains */ \"thirdweb/chains\");\n/* harmony import */ var thirdweb_storage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! thirdweb/storage */ \"thirdweb/storage\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! axios */ \"axios\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([zod__WEBPACK_IMPORTED_MODULE_1__, thirdweb__WEBPACK_IMPORTED_MODULE_2__, thirdweb_wallets__WEBPACK_IMPORTED_MODULE_3__, thirdweb_chains__WEBPACK_IMPORTED_MODULE_4__, thirdweb_storage__WEBPACK_IMPORTED_MODULE_5__, axios__WEBPACK_IMPORTED_MODULE_6__]);\n([zod__WEBPACK_IMPORTED_MODULE_1__, thirdweb__WEBPACK_IMPORTED_MODULE_2__, thirdweb_wallets__WEBPACK_IMPORTED_MODULE_3__, thirdweb_chains__WEBPACK_IMPORTED_MODULE_4__, thirdweb_storage__WEBPACK_IMPORTED_MODULE_5__, axios__WEBPACK_IMPORTED_MODULE_6__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n// Schema for the action parameters\nconst MintNFTSchema = zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    destinationAddress: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().regex(/^0x[a-fA-F0-9]{40}$/, \"Invalid Ethereum address\").describe(\"The Ethereum address where the NFT should be minted to\"),\n    name: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().min(1).describe(\"The name of the NFT\"),\n    description: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional().describe(\"Optional description of the NFT. If not provided, will be generated from the name\"),\n    modelUrl: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().url().describe(\"The URL of the 3D model from Meshy AI\")\n});\nconst mintNFT = (0,_coinbase_agentkit__WEBPACK_IMPORTED_MODULE_0__.customActionProvider)({\n    name: \"mint_nft\",\n    description: \"Mints an NFT from the 3D model to the specified address\",\n    schema: MintNFTSchema,\n    invoke: async (_, args)=>{\n        try {\n            // Validate environment variables\n            const CONTRACT_ADDRESS = process.env.CONTRACT_ADDRESS;\n            const THIRDWEB_CLIENT_ID = process.env.THIRDWEB_CLIENT_ID;\n            const ACCOUNT_PRIVATE_KEY = process.env.ACCOUNT_PRIVATE_KEY || '';\n            if (!CONTRACT_ADDRESS || !THIRDWEB_CLIENT_ID || !ACCOUNT_PRIVATE_KEY) {\n                throw new Error(\"Missing required environment variables\");\n            }\n            // create the client with your clientId, or secretKey if in a server environment\n            const client = (0,thirdweb__WEBPACK_IMPORTED_MODULE_2__.createThirdwebClient)({\n                clientId: THIRDWEB_CLIENT_ID\n            });\n            // connect to your contract\n            const contract = (0,thirdweb__WEBPACK_IMPORTED_MODULE_2__.getContract)({\n                client,\n                chain: (0,thirdweb_chains__WEBPACK_IMPORTED_MODULE_4__.defineChain)(84532),\n                address: CONTRACT_ADDRESS\n            });\n            // Download the 3D model from Meshy AI\n            const modelResponse = await axios__WEBPACK_IMPORTED_MODULE_6__[\"default\"].get(args.modelUrl, {\n                responseType: 'arraybuffer'\n            });\n            // Create File object from the model data\n            const modelFile = new File([\n                modelResponse.data\n            ], 'model.glb', {\n                type: 'model/gltf-binary'\n            });\n            // Upload the 3D model to IPFS\n            const modelUri = await (0,thirdweb_storage__WEBPACK_IMPORTED_MODULE_5__.upload)({\n                client,\n                files: [\n                    modelFile\n                ]\n            });\n            // Prepare metadata\n            const metadata = {\n                name: args.name,\n                description: args.description || `A 3D model of ${args.name.toLowerCase()} generated by Polygen agent.`,\n                animation_url: modelUri,\n                image: \"\",\n                background_color: \"\",\n                external_url: \"\",\n                customImage: \"\",\n                customAnimationUrl: \"\"\n            };\n            // Upload metadata to IPFS\n            const metadataUri = await (0,thirdweb_storage__WEBPACK_IMPORTED_MODULE_5__.upload)({\n                client,\n                files: [\n                    metadata\n                ]\n            });\n            // Mint NFT using the IPFS URI of the metadata\n            const transaction = await (0,thirdweb__WEBPACK_IMPORTED_MODULE_2__.prepareContractCall)({\n                contract,\n                method: \"function mintTo(address _to, string _uri) returns (uint256)\",\n                params: [\n                    args.destinationAddress,\n                    metadataUri\n                ]\n            });\n            const account = (0,thirdweb_wallets__WEBPACK_IMPORTED_MODULE_3__.privateKeyToAccount)({\n                client,\n                privateKey: ACCOUNT_PRIVATE_KEY\n            });\n            const { transactionHash } = await (0,thirdweb__WEBPACK_IMPORTED_MODULE_2__.sendTransaction)({\n                transaction,\n                account\n            });\n            return JSON.stringify({\n                status: \"success\",\n                transactionUri: `https://sepolia.basescan.org/tx/${transactionHash}`,\n                metadataUri,\n                metadata\n            }, null, 2);\n        } catch (error) {\n            if (error instanceof Error) {\n                return `Error minting NFT: ${error.message}`;\n            }\n            return \"An unknown error occurred while minting the NFT\";\n        }\n    }\n});\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./actions/mintNFT.ts\n");

/***/ }),

/***/ "(api)/./actions/refine3DAsset.ts":
/*!**********************************!*\
  !*** ./actions/refine3DAsset.ts ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   refine3DAsset: () => (/* binding */ refine3DAsset)\n/* harmony export */ });\n/* harmony import */ var _coinbase_agentkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @coinbase/agentkit */ \"@coinbase/agentkit\");\n/* harmony import */ var _coinbase_agentkit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_coinbase_agentkit__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zod */ \"zod\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"axios\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([zod__WEBPACK_IMPORTED_MODULE_1__, axios__WEBPACK_IMPORTED_MODULE_2__]);\n([zod__WEBPACK_IMPORTED_MODULE_1__, axios__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n// Define the schema for the 3D model refinement action\nconst Refine3DModelSchema = zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    previewTaskId: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().describe(\"The task ID of the preview model to be refined\"),\n    prompt: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional().describe(\"Optional additional description to guide refinement\")\n});\n// Create the Meshy text-to-3d refinement action provider\nconst refine3DAsset = (0,_coinbase_agentkit__WEBPACK_IMPORTED_MODULE_0__.customActionProvider)({\n    name: \"refine_3d_model\",\n    description: \"Refine a previously generated 3D model using Meshy.ai\",\n    schema: Refine3DModelSchema,\n    invoke: async (_, args)=>{\n        // Ensure API key is set\n        const apiKey = process.env.MESHY_API_KEY;\n        if (!apiKey) {\n            return \"Error: MESHY_API_KEY environment variable is not set\";\n        }\n        try {\n            // 1. Create refined task\n            const generateRefinedRequest = {\n                mode: \"refine\",\n                preview_task_id: args.previewTaskId,\n                ...args.prompt && {\n                    prompt: args.prompt\n                }\n            };\n            const generateRefinedResponse = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(\"https://api.meshy.ai/openapi/v2/text-to-3d\", generateRefinedRequest, {\n                headers: {\n                    Authorization: `Bearer ${apiKey}`,\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            const refinedTaskId = generateRefinedResponse.data.result;\n            // 2. Poll for task completion\n            let refinedTask;\n            const maxAttempts = 120; // 10 minutes max (5s * 120)\n            for(let i = 0; i < maxAttempts; i++){\n                const refinedTaskResponse = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(`https://api.meshy.ai/openapi/v2/text-to-3d/${refinedTaskId}`, {\n                    headers: {\n                        Authorization: `Bearer ${apiKey}`\n                    }\n                });\n                refinedTask = refinedTaskResponse.data;\n                if (refinedTask.status === \"SUCCEEDED\") {\n                    break;\n                }\n                if (refinedTask.status === \"FAILED\") {\n                    return `3D model refinement failed: ${refinedTask.error_message || \"Unknown error\"}`;\n                }\n                // Wait 5 seconds before next poll\n                await new Promise((resolve)=>setTimeout(resolve, 5000));\n            }\n            // Check if task timed out\n            if (refinedTask.status !== \"SUCCEEDED\") {\n                return \"3D model refinement timed out. Please try again.\";\n            }\n            // 3. Return refined model information\n            return JSON.stringify({\n                taskId: refinedTaskId,\n                originalPreviewTaskId: args.previewTaskId,\n                modelUrls: refinedTask.model_urls,\n                status: refinedTask.status\n            }, null, 2);\n        } catch (error) {\n            console.error(\"Error in Meshy 3D model refinement:\", error);\n            if (axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isAxiosError(error)) {\n                return `API Error: ${error.response?.data?.message || error.message}`;\n            }\n            return \"An unexpected error occurred during 3D model refinement\";\n        }\n    }\n});\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9hY3Rpb25zL3JlZmluZTNEQXNzZXQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBMEU7QUFDbEQ7QUFDRTtBQUUxQix1REFBdUQ7QUFDdkQsTUFBTUcsc0JBQXNCRixrQ0FBQ0EsQ0FBQ0csTUFBTSxDQUFDO0lBQ25DQyxlQUFlSixrQ0FBQ0EsQ0FDYkssTUFBTSxHQUNOQyxRQUFRLENBQUM7SUFDWkMsUUFBUVAsa0NBQUNBLENBQ05LLE1BQU0sR0FDTkcsUUFBUSxHQUNSRixRQUFRLENBQUM7QUFDZDtBQUVBLHlEQUF5RDtBQUNsRCxNQUFNRyxnQkFBZ0JWLHdFQUFvQkEsQ0FBaUI7SUFDaEVXLE1BQU07SUFDTkMsYUFBYTtJQUNiQyxRQUFRVjtJQUVSVyxRQUFRLE9BQU9DLEdBQUdDO1FBQ2hCLHdCQUF3QjtRQUN4QixNQUFNQyxTQUFTQyxRQUFRQyxHQUFHLENBQUNDLGFBQWE7UUFDeEMsSUFBSSxDQUFDSCxRQUFRO1lBQ1gsT0FBTztRQUNUO1FBRUEsSUFBSTtZQUNGLHlCQUF5QjtZQUN6QixNQUFNSSx5QkFBeUI7Z0JBQzdCQyxNQUFNO2dCQUNOQyxpQkFBaUJQLEtBQUtYLGFBQWE7Z0JBQ25DLEdBQUlXLEtBQUtSLE1BQU0sSUFBSTtvQkFBRUEsUUFBUVEsS0FBS1IsTUFBTTtnQkFBQyxDQUFDO1lBQzVDO1lBRUEsTUFBTWdCLDBCQUEwQixNQUFNdEIsa0RBQVUsQ0FDOUMsOENBQ0FtQix3QkFDQTtnQkFDRUssU0FBUztvQkFDUEMsZUFBZSxDQUFDLE9BQU8sRUFBRVYsUUFBUTtvQkFDakMsZ0JBQWdCO2dCQUNsQjtZQUNGO1lBR0YsTUFBTVcsZ0JBQWdCSix3QkFBd0JLLElBQUksQ0FBQ0MsTUFBTTtZQUV6RCw4QkFBOEI7WUFDOUIsSUFBSUM7WUFDSixNQUFNQyxjQUFjLEtBQUssNEJBQTRCO1lBQ3JELElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJRCxhQUFhQyxJQUFLO2dCQUNwQyxNQUFNQyxzQkFBc0IsTUFBTWhDLGlEQUFTLENBQ3pDLENBQUMsMkNBQTJDLEVBQUUwQixlQUFlLEVBQzdEO29CQUNFRixTQUFTO3dCQUNQQyxlQUFlLENBQUMsT0FBTyxFQUFFVixRQUFRO29CQUNuQztnQkFDRjtnQkFHRmMsY0FBY0csb0JBQW9CTCxJQUFJO2dCQUV0QyxJQUFJRSxZQUFZSyxNQUFNLEtBQUssYUFBYTtvQkFDdEM7Z0JBQ0Y7Z0JBRUEsSUFBSUwsWUFBWUssTUFBTSxLQUFLLFVBQVU7b0JBQ25DLE9BQU8sQ0FBQyw0QkFBNEIsRUFBRUwsWUFBWU0sYUFBYSxJQUFJLGlCQUFpQjtnQkFDdEY7Z0JBRUEsa0NBQWtDO2dCQUNsQyxNQUFNLElBQUlDLFFBQVEsQ0FBQ0MsVUFBWUMsV0FBV0QsU0FBUztZQUNyRDtZQUVBLDBCQUEwQjtZQUMxQixJQUFJUixZQUFZSyxNQUFNLEtBQUssYUFBYTtnQkFDdEMsT0FBTztZQUNUO1lBRUEsc0NBQXNDO1lBQ3RDLE9BQU9LLEtBQUtDLFNBQVMsQ0FDbkI7Z0JBQ0VDLFFBQVFmO2dCQUNSZ0IsdUJBQXVCNUIsS0FBS1gsYUFBYTtnQkFDekN3QyxXQUFXZCxZQUFZZSxVQUFVO2dCQUNqQ1YsUUFBUUwsWUFBWUssTUFBTTtZQUM1QixHQUNBLE1BQ0E7UUFFSixFQUFFLE9BQU9XLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLHVDQUF1Q0E7WUFFckQsSUFBSTdDLDBEQUFrQixDQUFDNkMsUUFBUTtnQkFDN0IsT0FBTyxDQUFDLFdBQVcsRUFBRUEsTUFBTUcsUUFBUSxFQUFFckIsTUFBTXNCLFdBQVdKLE1BQU1JLE9BQU8sRUFBRTtZQUN2RTtZQUVBLE9BQU87UUFDVDtJQUNGO0FBQ0YsR0FBRyIsInNvdXJjZXMiOlsiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9hY3Rpb25zL3JlZmluZTNEQXNzZXQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3VzdG9tQWN0aW9uUHJvdmlkZXIsIFdhbGxldFByb3ZpZGVyIH0gZnJvbSBcIkBjb2luYmFzZS9hZ2VudGtpdFwiO1xuaW1wb3J0IHsgeiB9IGZyb20gXCJ6b2RcIjtcbmltcG9ydCBheGlvcyBmcm9tIFwiYXhpb3NcIjtcblxuLy8gRGVmaW5lIHRoZSBzY2hlbWEgZm9yIHRoZSAzRCBtb2RlbCByZWZpbmVtZW50IGFjdGlvblxuY29uc3QgUmVmaW5lM0RNb2RlbFNjaGVtYSA9IHoub2JqZWN0KHtcbiAgcHJldmlld1Rhc2tJZDogelxuICAgIC5zdHJpbmcoKVxuICAgIC5kZXNjcmliZShcIlRoZSB0YXNrIElEIG9mIHRoZSBwcmV2aWV3IG1vZGVsIHRvIGJlIHJlZmluZWRcIiksXG4gIHByb21wdDogelxuICAgIC5zdHJpbmcoKVxuICAgIC5vcHRpb25hbCgpXG4gICAgLmRlc2NyaWJlKFwiT3B0aW9uYWwgYWRkaXRpb25hbCBkZXNjcmlwdGlvbiB0byBndWlkZSByZWZpbmVtZW50XCIpLFxufSk7XG5cbi8vIENyZWF0ZSB0aGUgTWVzaHkgdGV4dC10by0zZCByZWZpbmVtZW50IGFjdGlvbiBwcm92aWRlclxuZXhwb3J0IGNvbnN0IHJlZmluZTNEQXNzZXQgPSBjdXN0b21BY3Rpb25Qcm92aWRlcjxXYWxsZXRQcm92aWRlcj4oe1xuICBuYW1lOiBcInJlZmluZV8zZF9tb2RlbFwiLFxuICBkZXNjcmlwdGlvbjogXCJSZWZpbmUgYSBwcmV2aW91c2x5IGdlbmVyYXRlZCAzRCBtb2RlbCB1c2luZyBNZXNoeS5haVwiLFxuICBzY2hlbWE6IFJlZmluZTNETW9kZWxTY2hlbWEsXG5cbiAgaW52b2tlOiBhc3luYyAoXywgYXJnczogei5pbmZlcjx0eXBlb2YgUmVmaW5lM0RNb2RlbFNjaGVtYT4pID0+IHtcbiAgICAvLyBFbnN1cmUgQVBJIGtleSBpcyBzZXRcbiAgICBjb25zdCBhcGlLZXkgPSBwcm9jZXNzLmVudi5NRVNIWV9BUElfS0VZO1xuICAgIGlmICghYXBpS2V5KSB7XG4gICAgICByZXR1cm4gXCJFcnJvcjogTUVTSFlfQVBJX0tFWSBlbnZpcm9ubWVudCB2YXJpYWJsZSBpcyBub3Qgc2V0XCI7XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIC8vIDEuIENyZWF0ZSByZWZpbmVkIHRhc2tcbiAgICAgIGNvbnN0IGdlbmVyYXRlUmVmaW5lZFJlcXVlc3QgPSB7XG4gICAgICAgIG1vZGU6IFwicmVmaW5lXCIsXG4gICAgICAgIHByZXZpZXdfdGFza19pZDogYXJncy5wcmV2aWV3VGFza0lkLFxuICAgICAgICAuLi4oYXJncy5wcm9tcHQgJiYgeyBwcm9tcHQ6IGFyZ3MucHJvbXB0IH0pLCAvLyBPcHRpb25hbCBhZGRpdGlvbmFsIHByb21wdFxuICAgICAgfTtcblxuICAgICAgY29uc3QgZ2VuZXJhdGVSZWZpbmVkUmVzcG9uc2UgPSBhd2FpdCBheGlvcy5wb3N0KFxuICAgICAgICBcImh0dHBzOi8vYXBpLm1lc2h5LmFpL29wZW5hcGkvdjIvdGV4dC10by0zZFwiLFxuICAgICAgICBnZW5lcmF0ZVJlZmluZWRSZXF1ZXN0LFxuICAgICAgICB7XG4gICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke2FwaUtleX1gLFxuICAgICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICk7XG5cbiAgICAgIGNvbnN0IHJlZmluZWRUYXNrSWQgPSBnZW5lcmF0ZVJlZmluZWRSZXNwb25zZS5kYXRhLnJlc3VsdDtcblxuICAgICAgLy8gMi4gUG9sbCBmb3IgdGFzayBjb21wbGV0aW9uXG4gICAgICBsZXQgcmVmaW5lZFRhc2s7XG4gICAgICBjb25zdCBtYXhBdHRlbXB0cyA9IDEyMDsgLy8gMTAgbWludXRlcyBtYXggKDVzICogMTIwKVxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBtYXhBdHRlbXB0czsgaSsrKSB7XG4gICAgICAgIGNvbnN0IHJlZmluZWRUYXNrUmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoXG4gICAgICAgICAgYGh0dHBzOi8vYXBpLm1lc2h5LmFpL29wZW5hcGkvdjIvdGV4dC10by0zZC8ke3JlZmluZWRUYXNrSWR9YCxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHthcGlLZXl9YCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfSxcbiAgICAgICAgKTtcblxuICAgICAgICByZWZpbmVkVGFzayA9IHJlZmluZWRUYXNrUmVzcG9uc2UuZGF0YTtcblxuICAgICAgICBpZiAocmVmaW5lZFRhc2suc3RhdHVzID09PSBcIlNVQ0NFRURFRFwiKSB7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAocmVmaW5lZFRhc2suc3RhdHVzID09PSBcIkZBSUxFRFwiKSB7XG4gICAgICAgICAgcmV0dXJuIGAzRCBtb2RlbCByZWZpbmVtZW50IGZhaWxlZDogJHtyZWZpbmVkVGFzay5lcnJvcl9tZXNzYWdlIHx8IFwiVW5rbm93biBlcnJvclwifWA7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBXYWl0IDUgc2Vjb25kcyBiZWZvcmUgbmV4dCBwb2xsXG4gICAgICAgIGF3YWl0IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDUwMDApKTtcbiAgICAgIH1cblxuICAgICAgLy8gQ2hlY2sgaWYgdGFzayB0aW1lZCBvdXRcbiAgICAgIGlmIChyZWZpbmVkVGFzay5zdGF0dXMgIT09IFwiU1VDQ0VFREVEXCIpIHtcbiAgICAgICAgcmV0dXJuIFwiM0QgbW9kZWwgcmVmaW5lbWVudCB0aW1lZCBvdXQuIFBsZWFzZSB0cnkgYWdhaW4uXCI7XG4gICAgICB9XG5cbiAgICAgIC8vIDMuIFJldHVybiByZWZpbmVkIG1vZGVsIGluZm9ybWF0aW9uXG4gICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoXG4gICAgICAgIHtcbiAgICAgICAgICB0YXNrSWQ6IHJlZmluZWRUYXNrSWQsXG4gICAgICAgICAgb3JpZ2luYWxQcmV2aWV3VGFza0lkOiBhcmdzLnByZXZpZXdUYXNrSWQsXG4gICAgICAgICAgbW9kZWxVcmxzOiByZWZpbmVkVGFzay5tb2RlbF91cmxzLFxuICAgICAgICAgIHN0YXR1czogcmVmaW5lZFRhc2suc3RhdHVzLFxuICAgICAgICB9LFxuICAgICAgICBudWxsLFxuICAgICAgICAyLFxuICAgICAgKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGluIE1lc2h5IDNEIG1vZGVsIHJlZmluZW1lbnQ6XCIsIGVycm9yKTtcblxuICAgICAgaWYgKGF4aW9zLmlzQXhpb3NFcnJvcihlcnJvcikpIHtcbiAgICAgICAgcmV0dXJuIGBBUEkgRXJyb3I6ICR7ZXJyb3IucmVzcG9uc2U/LmRhdGE/Lm1lc3NhZ2UgfHwgZXJyb3IubWVzc2FnZX1gO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gXCJBbiB1bmV4cGVjdGVkIGVycm9yIG9jY3VycmVkIGR1cmluZyAzRCBtb2RlbCByZWZpbmVtZW50XCI7XG4gICAgfVxuICB9LFxufSk7XG4iXSwibmFtZXMiOlsiY3VzdG9tQWN0aW9uUHJvdmlkZXIiLCJ6IiwiYXhpb3MiLCJSZWZpbmUzRE1vZGVsU2NoZW1hIiwib2JqZWN0IiwicHJldmlld1Rhc2tJZCIsInN0cmluZyIsImRlc2NyaWJlIiwicHJvbXB0Iiwib3B0aW9uYWwiLCJyZWZpbmUzREFzc2V0IiwibmFtZSIsImRlc2NyaXB0aW9uIiwic2NoZW1hIiwiaW52b2tlIiwiXyIsImFyZ3MiLCJhcGlLZXkiLCJwcm9jZXNzIiwiZW52IiwiTUVTSFlfQVBJX0tFWSIsImdlbmVyYXRlUmVmaW5lZFJlcXVlc3QiLCJtb2RlIiwicHJldmlld190YXNrX2lkIiwiZ2VuZXJhdGVSZWZpbmVkUmVzcG9uc2UiLCJwb3N0IiwiaGVhZGVycyIsIkF1dGhvcml6YXRpb24iLCJyZWZpbmVkVGFza0lkIiwiZGF0YSIsInJlc3VsdCIsInJlZmluZWRUYXNrIiwibWF4QXR0ZW1wdHMiLCJpIiwicmVmaW5lZFRhc2tSZXNwb25zZSIsImdldCIsInN0YXR1cyIsImVycm9yX21lc3NhZ2UiLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiLCJKU09OIiwic3RyaW5naWZ5IiwidGFza0lkIiwib3JpZ2luYWxQcmV2aWV3VGFza0lkIiwibW9kZWxVcmxzIiwibW9kZWxfdXJscyIsImVycm9yIiwiY29uc29sZSIsImlzQXhpb3NFcnJvciIsInJlc3BvbnNlIiwibWVzc2FnZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./actions/refine3DAsset.ts\n");

/***/ }),

/***/ "(api)/./chatbot.ts":
/*!********************!*\
  !*** ./chatbot.ts ***!
  \********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeAgent: () => (/* binding */ initializeAgent)\n/* harmony export */ });\n/* harmony import */ var _coinbase_agentkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @coinbase/agentkit */ \"@coinbase/agentkit\");\n/* harmony import */ var _coinbase_agentkit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_coinbase_agentkit__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _actions_generate3DAsset__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./actions/generate3DAsset */ \"(api)/./actions/generate3DAsset.ts\");\n/* harmony import */ var _actions_refine3DAsset__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./actions/refine3DAsset */ \"(api)/./actions/refine3DAsset.ts\");\n/* harmony import */ var _actions_mintNFT__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./actions/mintNFT */ \"(api)/./actions/mintNFT.ts\");\n/* harmony import */ var _coinbase_agentkit_langchain__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @coinbase/agentkit-langchain */ \"@coinbase/agentkit-langchain\");\n/* harmony import */ var _coinbase_agentkit_langchain__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_coinbase_agentkit_langchain__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @langchain/core/messages */ \"@langchain/core/messages\");\n/* harmony import */ var _langchain_langgraph__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @langchain/langgraph */ \"@langchain/langgraph\");\n/* harmony import */ var _langchain_langgraph_prebuilt__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @langchain/langgraph/prebuilt */ \"@langchain/langgraph/prebuilt\");\n/* harmony import */ var _langchain_openai__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @langchain/openai */ \"@langchain/openai\");\n/* harmony import */ var dotenv__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! dotenv */ \"dotenv\");\n/* harmony import */ var dotenv__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(dotenv__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var readline__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! readline */ \"readline\");\n/* harmony import */ var readline__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(readline__WEBPACK_IMPORTED_MODULE_11__);\n/* module decorator */ module = __webpack_require__.hmd(module);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_actions_generate3DAsset__WEBPACK_IMPORTED_MODULE_1__, _actions_refine3DAsset__WEBPACK_IMPORTED_MODULE_2__, _actions_mintNFT__WEBPACK_IMPORTED_MODULE_3__, _langchain_core_messages__WEBPACK_IMPORTED_MODULE_5__, _langchain_langgraph__WEBPACK_IMPORTED_MODULE_6__, _langchain_langgraph_prebuilt__WEBPACK_IMPORTED_MODULE_7__, _langchain_openai__WEBPACK_IMPORTED_MODULE_8__]);\n([_actions_generate3DAsset__WEBPACK_IMPORTED_MODULE_1__, _actions_refine3DAsset__WEBPACK_IMPORTED_MODULE_2__, _actions_mintNFT__WEBPACK_IMPORTED_MODULE_3__, _langchain_core_messages__WEBPACK_IMPORTED_MODULE_5__, _langchain_langgraph__WEBPACK_IMPORTED_MODULE_6__, _langchain_langgraph_prebuilt__WEBPACK_IMPORTED_MODULE_7__, _langchain_openai__WEBPACK_IMPORTED_MODULE_8__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\n\n\n\n\ndotenv__WEBPACK_IMPORTED_MODULE_9__.config();\n/**\n * Validates that required environment variables are set\n *\n * @throws {Error} - If required environment variables are missing\n * @returns {void}\n */ function validateEnvironment() {\n    const missingVars = [];\n    // Check required variables\n    const requiredVars = [\n        \"OPENAI_API_KEY\",\n        \"CDP_API_KEY_NAME\",\n        \"CDP_API_KEY_PRIVATE_KEY\"\n    ];\n    requiredVars.forEach((varName)=>{\n        if (!process.env[varName]) {\n            missingVars.push(varName);\n        }\n    });\n    // Exit if any required variables are missing\n    if (missingVars.length > 0) {\n        console.error(\"Error: Required environment variables are not set\");\n        missingVars.forEach((varName)=>{\n            console.error(`${varName}=your_${varName.toLowerCase()}_here`);\n        });\n        process.exit(1);\n    }\n    // Warn about optional NETWORK_ID\n    if (!process.env.NETWORK_ID) {\n        console.warn(\"Warning: NETWORK_ID not set, defaulting to base-sepolia testnet\");\n    }\n}\n// Add this right after imports and before any other code\nvalidateEnvironment();\n// Configure a file to persist the agent's CDP MPC Wallet Data\nconst WALLET_DATA_FILE = \"wallet_data.txt\";\n/**\n * Initialize the agent with CDP Agentkit\n *\n * @returns Agent executor and config\n */ async function initializeAgent() {\n    try {\n        // Initialize LLM\n        // const llm = new ChatOpenAI({\n        //   model: \"gpt-4o-mini\",\n        // });\n        const llm = new _langchain_openai__WEBPACK_IMPORTED_MODULE_8__.ChatOpenAI({\n            model: \"openai/gpt-4o\",\n            apiKey: process.env.OPENAI_API_KEY,\n            configuration: {\n                baseURL: \"https://openrouter.ai/api/v1\"\n            }\n        });\n        let walletDataStr = null;\n        // Read existing wallet data if available\n        if (fs__WEBPACK_IMPORTED_MODULE_10__.existsSync(WALLET_DATA_FILE)) {\n            try {\n                walletDataStr = fs__WEBPACK_IMPORTED_MODULE_10__.readFileSync(WALLET_DATA_FILE, \"utf8\");\n            } catch (error) {\n                console.error(\"Error reading wallet data:\", error);\n            // Continue without wallet data\n            }\n        }\n        // Configure CDP Wallet Provider\n        const config = {\n            apiKeyName: process.env.CDP_API_KEY_NAME,\n            apiKeyPrivateKey: process.env.CDP_API_KEY_PRIVATE_KEY?.replace(/\\\\n/g, \"\\n\"),\n            cdpWalletData: walletDataStr || undefined,\n            networkId: process.env.NETWORK_ID || \"base-sepolia\"\n        };\n        const walletProvider = await _coinbase_agentkit__WEBPACK_IMPORTED_MODULE_0__.CdpWalletProvider.configureWithWallet(config);\n        // Initialize AgentKit\n        const agentkit = await _coinbase_agentkit__WEBPACK_IMPORTED_MODULE_0__.AgentKit.from({\n            walletProvider,\n            actionProviders: [\n                _actions_generate3DAsset__WEBPACK_IMPORTED_MODULE_1__.generate3DAsset,\n                _actions_refine3DAsset__WEBPACK_IMPORTED_MODULE_2__.refine3DAsset,\n                _actions_mintNFT__WEBPACK_IMPORTED_MODULE_3__.mintNFT,\n                (0,_coinbase_agentkit__WEBPACK_IMPORTED_MODULE_0__.wethActionProvider)(),\n                (0,_coinbase_agentkit__WEBPACK_IMPORTED_MODULE_0__.pythActionProvider)(),\n                (0,_coinbase_agentkit__WEBPACK_IMPORTED_MODULE_0__.walletActionProvider)(),\n                (0,_coinbase_agentkit__WEBPACK_IMPORTED_MODULE_0__.erc20ActionProvider)(),\n                (0,_coinbase_agentkit__WEBPACK_IMPORTED_MODULE_0__.erc721ActionProvider)(),\n                (0,_coinbase_agentkit__WEBPACK_IMPORTED_MODULE_0__.cdpApiActionProvider)({\n                    apiKeyName: process.env.CDP_API_KEY_NAME,\n                    apiKeyPrivateKey: process.env.CDP_API_KEY_PRIVATE_KEY?.replace(/\\\\n/g, \"\\n\")\n                }),\n                (0,_coinbase_agentkit__WEBPACK_IMPORTED_MODULE_0__.cdpWalletActionProvider)({\n                    apiKeyName: process.env.CDP_API_KEY_NAME,\n                    apiKeyPrivateKey: process.env.CDP_API_KEY_PRIVATE_KEY?.replace(/\\\\n/g, \"\\n\")\n                })\n            ]\n        });\n        const tools = await (0,_coinbase_agentkit_langchain__WEBPACK_IMPORTED_MODULE_4__.getLangChainTools)(agentkit);\n        // Store buffered conversation history in memory\n        const memory = new _langchain_langgraph__WEBPACK_IMPORTED_MODULE_6__.MemorySaver();\n        const agentConfig = {\n            configurable: {\n                thread_id: \"CDP AgentKit Chatbot Example!\"\n            }\n        };\n        // Create React Agent using the LLM and CDP AgentKit tools\n        const agent = (0,_langchain_langgraph_prebuilt__WEBPACK_IMPORTED_MODULE_7__.createReactAgent)({\n            llm,\n            tools,\n            checkpointSaver: memory,\n            messageModifier: `\n        You are an AI-powered platform agent for PolyGen, a comprehensive 3D asset generation and NFT marketplace system. Your primary objective is to transform text prompts into tradable 3D models using AI generation, blockchain technology, and a user-centric workflow. Your core responsibilities include: generating 3D assets  from natural language inputs, and minting these assets as NFTs on Base.\n        `\n        });\n        // Save wallet data\n        const exportedWallet = await walletProvider.exportWallet();\n        fs__WEBPACK_IMPORTED_MODULE_10__.writeFileSync(WALLET_DATA_FILE, JSON.stringify(exportedWallet));\n        return {\n            agent,\n            config: agentConfig\n        };\n    } catch (error) {\n        console.error(\"Failed to initialize agent:\", error);\n        throw error; // Re-throw to be handled by caller\n    }\n}\n/**\n * Run the agent autonomously with specified intervals\n *\n * @param agent - The agent executor\n * @param config - Agent configuration\n * @param interval - Time interval between actions in seconds\n */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\nasync function runAutonomousMode(agent, config, interval = 10) {\n    console.log(\"Starting autonomous mode...\");\n    // eslint-disable-next-line no-constant-condition\n    while(true){\n        try {\n            const thought = \"Be creative and do something interesting on the blockchain. \" + \"Choose an action or set of actions and execute it that highlights your abilities.\";\n            const stream = await agent.stream({\n                messages: [\n                    new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_5__.HumanMessage(thought)\n                ]\n            }, config);\n            for await (const chunk of stream){\n                if (\"agent\" in chunk) {\n                    console.log(chunk.agent.messages[0].content);\n                } else if (\"tools\" in chunk) {\n                    console.log(chunk.tools.messages[0].content);\n                }\n                console.log(\"-------------------\");\n            }\n            await new Promise((resolve)=>setTimeout(resolve, interval * 1000));\n        } catch (error) {\n            if (error instanceof Error) {\n                console.error(\"Error:\", error.message);\n            }\n            process.exit(1);\n        }\n    }\n}\n/**\n * Run the agent interactively based on user input\n *\n * @param agent - The agent executor\n * @param config - Agent configuration\n */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\nasync function runChatMode(agent, config) {\n    console.log(\"Starting chat mode... Type 'exit' to end.\");\n    const rl = readline__WEBPACK_IMPORTED_MODULE_11__.createInterface({\n        input: process.stdin,\n        output: process.stdout\n    });\n    const question = (prompt)=>new Promise((resolve)=>rl.question(prompt, resolve));\n    try {\n        // eslint-disable-next-line no-constant-condition\n        while(true){\n            const userInput = await question(\"\\nPrompt: \");\n            if (userInput.toLowerCase() === \"exit\") {\n                break;\n            }\n            const stream = await agent.stream({\n                messages: [\n                    new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_5__.HumanMessage(userInput)\n                ]\n            }, config);\n            for await (const chunk of stream){\n                if (\"agent\" in chunk) {\n                    console.log(chunk.agent.messages[0].content);\n                } else if (\"tools\" in chunk) {\n                    console.log(chunk.tools.messages[0].content);\n                }\n                console.log(\"-------------------\");\n            }\n        }\n    } catch (error) {\n        if (error instanceof Error) {\n            console.error(\"Error:\", error.message);\n        }\n        process.exit(1);\n    } finally{\n        rl.close();\n    }\n}\n/**\n * Choose whether to run in autonomous or chat mode based on user input\n *\n * @returns Selected mode\n */ async function chooseMode() {\n    const rl = readline__WEBPACK_IMPORTED_MODULE_11__.createInterface({\n        input: process.stdin,\n        output: process.stdout\n    });\n    const question = (prompt)=>new Promise((resolve)=>rl.question(prompt, resolve));\n    // eslint-disable-next-line no-constant-condition\n    while(true){\n        console.log(\"\\nAvailable modes:\");\n        console.log(\"1. chat    - Interactive chat mode\");\n        console.log(\"2. auto    - Autonomous action mode\");\n        const choice = (await question(\"\\nChoose a mode (enter number or name): \")).toLowerCase().trim();\n        if (choice === \"1\" || choice === \"chat\") {\n            rl.close();\n            return \"chat\";\n        } else if (choice === \"2\" || choice === \"auto\") {\n            rl.close();\n            return \"auto\";\n        }\n        console.log(\"Invalid choice. Please try again.\");\n    }\n}\n/**\n * Start the chatbot agent\n */ async function main() {\n    try {\n        const { agent, config } = await initializeAgent();\n        const mode = await chooseMode();\n        if (mode === \"chat\") {\n            await runChatMode(agent, config);\n        } else {\n            await runAutonomousMode(agent, config);\n        }\n    } catch (error) {\n        if (error instanceof Error) {\n            console.error(\"Error:\", error.message);\n        }\n        process.exit(1);\n    }\n}\nif (__webpack_require__.c[__webpack_require__.s] === module) {\n    console.log(\"Starting Agent...\");\n    main().catch((error)=>{\n        console.error(\"Fatal error:\", error);\n        process.exit(1);\n    });\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./chatbot.ts\n");

/***/ }),

/***/ "(api)/./pages/api/chat.ts":
/*!***************************!*\
  !*** ./pages/api/chat.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./server */ \"(api)/./pages/api/server.ts\");\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/messages */ \"@langchain/core/messages\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_server__WEBPACK_IMPORTED_MODULE_0__, _langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__]);\n([_server__WEBPACK_IMPORTED_MODULE_0__, _langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nconst config = {\n    api: {\n        bodyParser: true,\n        responseLimit: false\n    }\n};\nasync function handler(req, res) {\n    if (req.method !== 'POST') {\n        return res.status(405).json({\n            error: 'Method not allowed'\n        });\n    }\n    try {\n        const { message } = req.body;\n        if (!message) {\n            return res.status(400).json({\n                error: 'Message is required'\n            });\n        }\n        const { agent, config } = await (0,_server__WEBPACK_IMPORTED_MODULE_0__.getAgent)();\n        const stream = await agent.stream({\n            messages: [\n                new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__.HumanMessage(message)\n            ]\n        }, config);\n        res.setHeader('Content-Type', 'text/event-stream');\n        res.setHeader('Cache-Control', 'no-cache');\n        res.setHeader('Connection', 'keep-alive');\n        for await (const chunk of stream){\n            if (\"agent\" in chunk) {\n                res.write(`data: ${JSON.stringify({\n                    type: \"agent\",\n                    content: chunk.agent.messages[0].content\n                })}\\n\\n`);\n            } else if (\"tools\" in chunk) {\n                res.write(`data: ${JSON.stringify({\n                    type: \"tools\",\n                    content: chunk.tools.messages[0].content\n                })}\\n\\n`);\n            }\n        }\n        res.write('data: [DONE]\\n\\n');\n        res.end();\n    } catch (error) {\n        if (!res.headersSent) {\n            res.status(500).json({\n                error: error instanceof Error ? error.message : 'Unknown error'\n            });\n        }\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvY2hhdC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ29DO0FBQ29CO0FBRWpELE1BQU1FLFNBQVM7SUFDcEJDLEtBQUs7UUFDSEMsWUFBWTtRQUNaQyxlQUFlO0lBQ2pCO0FBQ0YsRUFBRTtBQUVhLGVBQWVDLFFBQVFDLEdBQW1CLEVBQUVDLEdBQW9CO0lBQzdFLElBQUlELElBQUlFLE1BQU0sS0FBSyxRQUFRO1FBQ3pCLE9BQU9ELElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFBRUMsT0FBTztRQUFxQjtJQUM1RDtJQUVBLElBQUk7UUFDRixNQUFNLEVBQUVDLE9BQU8sRUFBRSxHQUFHTixJQUFJTyxJQUFJO1FBRTVCLElBQUksQ0FBQ0QsU0FBUztZQUNaLE9BQU9MLElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7Z0JBQUVDLE9BQU87WUFBc0I7UUFDN0Q7UUFFQSxNQUFNLEVBQUVHLEtBQUssRUFBRWIsTUFBTSxFQUFFLEdBQUcsTUFBTUYsaURBQVFBO1FBQ3hDLE1BQU1nQixTQUFTLE1BQU1ELE1BQU1DLE1BQU0sQ0FDL0I7WUFBRUMsVUFBVTtnQkFBQyxJQUFJaEIsa0VBQVlBLENBQUNZO2FBQVM7UUFBQyxHQUN4Q1g7UUFHRk0sSUFBSVUsU0FBUyxDQUFDLGdCQUFnQjtRQUM5QlYsSUFBSVUsU0FBUyxDQUFDLGlCQUFpQjtRQUMvQlYsSUFBSVUsU0FBUyxDQUFDLGNBQWM7UUFFNUIsV0FBVyxNQUFNQyxTQUFTSCxPQUFRO1lBQ2hDLElBQUksV0FBV0csT0FBTztnQkFDcEJYLElBQUlZLEtBQUssQ0FBQyxDQUFDLE1BQU0sRUFBRUMsS0FBS0MsU0FBUyxDQUFDO29CQUNoQ0MsTUFBTTtvQkFDTkMsU0FBU0wsTUFBTUosS0FBSyxDQUFDRSxRQUFRLENBQUMsRUFBRSxDQUFDTyxPQUFPO2dCQUMxQyxHQUFHLElBQUksQ0FBQztZQUNWLE9BQU8sSUFBSSxXQUFXTCxPQUFPO2dCQUMzQlgsSUFBSVksS0FBSyxDQUFDLENBQUMsTUFBTSxFQUFFQyxLQUFLQyxTQUFTLENBQUM7b0JBQ2hDQyxNQUFNO29CQUNOQyxTQUFTTCxNQUFNTSxLQUFLLENBQUNSLFFBQVEsQ0FBQyxFQUFFLENBQUNPLE9BQU87Z0JBQzFDLEdBQUcsSUFBSSxDQUFDO1lBQ1Y7UUFDRjtRQUVBaEIsSUFBSVksS0FBSyxDQUFDO1FBQ1ZaLElBQUlrQixHQUFHO0lBQ1QsRUFBRSxPQUFPZCxPQUFPO1FBQ2QsSUFBSSxDQUFDSixJQUFJbUIsV0FBVyxFQUFFO1lBQ3BCbkIsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFDbkJDLE9BQU9BLGlCQUFpQmdCLFFBQVFoQixNQUFNQyxPQUFPLEdBQUc7WUFDbEQ7UUFDRjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3Jrc3BhY2UvcGFnZXMvYXBpL2NoYXQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dEFwaVJlcXVlc3QsIE5leHRBcGlSZXNwb25zZSB9IGZyb20gJ25leHQnO1xuaW1wb3J0IHsgZ2V0QWdlbnQgfSBmcm9tICcuL3NlcnZlcic7XG5pbXBvcnQgeyBIdW1hbk1lc3NhZ2UgfSBmcm9tICdAbGFuZ2NoYWluL2NvcmUvbWVzc2FnZXMnO1xuXG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xuICBhcGk6IHtcbiAgICBib2R5UGFyc2VyOiB0cnVlLFxuICAgIHJlc3BvbnNlTGltaXQ6IGZhbHNlLFxuICB9LFxufTtcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXE6IE5leHRBcGlSZXF1ZXN0LCByZXM6IE5leHRBcGlSZXNwb25zZSkge1xuICBpZiAocmVxLm1ldGhvZCAhPT0gJ1BPU1QnKSB7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA1KS5qc29uKHsgZXJyb3I6ICdNZXRob2Qgbm90IGFsbG93ZWQnIH0pO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBjb25zdCB7IG1lc3NhZ2UgfSA9IHJlcS5ib2R5O1xuXG4gICAgaWYgKCFtZXNzYWdlKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBlcnJvcjogJ01lc3NhZ2UgaXMgcmVxdWlyZWQnIH0pO1xuICAgIH1cblxuICAgIGNvbnN0IHsgYWdlbnQsIGNvbmZpZyB9ID0gYXdhaXQgZ2V0QWdlbnQoKTtcbiAgICBjb25zdCBzdHJlYW0gPSBhd2FpdCBhZ2VudC5zdHJlYW0oXG4gICAgICB7IG1lc3NhZ2VzOiBbbmV3IEh1bWFuTWVzc2FnZShtZXNzYWdlKV0gfSxcbiAgICAgIGNvbmZpZ1xuICAgICk7XG5cbiAgICByZXMuc2V0SGVhZGVyKCdDb250ZW50LVR5cGUnLCAndGV4dC9ldmVudC1zdHJlYW0nKTtcbiAgICByZXMuc2V0SGVhZGVyKCdDYWNoZS1Db250cm9sJywgJ25vLWNhY2hlJyk7XG4gICAgcmVzLnNldEhlYWRlcignQ29ubmVjdGlvbicsICdrZWVwLWFsaXZlJyk7XG5cbiAgICBmb3IgYXdhaXQgKGNvbnN0IGNodW5rIG9mIHN0cmVhbSkge1xuICAgICAgaWYgKFwiYWdlbnRcIiBpbiBjaHVuaykge1xuICAgICAgICByZXMud3JpdGUoYGRhdGE6ICR7SlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgIHR5cGU6IFwiYWdlbnRcIixcbiAgICAgICAgICBjb250ZW50OiBjaHVuay5hZ2VudC5tZXNzYWdlc1swXS5jb250ZW50XG4gICAgICAgIH0pfVxcblxcbmApO1xuICAgICAgfSBlbHNlIGlmIChcInRvb2xzXCIgaW4gY2h1bmspIHtcbiAgICAgICAgcmVzLndyaXRlKGBkYXRhOiAke0pTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICB0eXBlOiBcInRvb2xzXCIsXG4gICAgICAgICAgY29udGVudDogY2h1bmsudG9vbHMubWVzc2FnZXNbMF0uY29udGVudFxuICAgICAgICB9KX1cXG5cXG5gKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXMud3JpdGUoJ2RhdGE6IFtET05FXVxcblxcbicpO1xuICAgIHJlcy5lbmQoKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBpZiAoIXJlcy5oZWFkZXJzU2VudCkge1xuICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgICBlcnJvcjogZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnVW5rbm93biBlcnJvcidcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufSJdLCJuYW1lcyI6WyJnZXRBZ2VudCIsIkh1bWFuTWVzc2FnZSIsImNvbmZpZyIsImFwaSIsImJvZHlQYXJzZXIiLCJyZXNwb25zZUxpbWl0IiwiaGFuZGxlciIsInJlcSIsInJlcyIsIm1ldGhvZCIsInN0YXR1cyIsImpzb24iLCJlcnJvciIsIm1lc3NhZ2UiLCJib2R5IiwiYWdlbnQiLCJzdHJlYW0iLCJtZXNzYWdlcyIsInNldEhlYWRlciIsImNodW5rIiwid3JpdGUiLCJKU09OIiwic3RyaW5naWZ5IiwidHlwZSIsImNvbnRlbnQiLCJ0b29scyIsImVuZCIsImhlYWRlcnNTZW50IiwiRXJyb3IiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./pages/api/chat.ts\n");

/***/ }),

/***/ "(api)/./pages/api/server.ts":
/*!*****************************!*\
  !*** ./pages/api/server.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAgent: () => (/* binding */ getAgent)\n/* harmony export */ });\n/* harmony import */ var _chatbot__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../chatbot */ \"(api)/./chatbot.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_chatbot__WEBPACK_IMPORTED_MODULE_0__]);\n_chatbot__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n// Initialize agent once and export for use across API endpoints\nconst getAgent = async ()=>{\n    try {\n        const { agent, config } = await (0,_chatbot__WEBPACK_IMPORTED_MODULE_0__.initializeAgent)();\n        return {\n            agent,\n            config\n        };\n    } catch (error) {\n        console.error('Failed to initialize agent:', error);\n        throw error;\n    }\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvc2VydmVyLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWdEO0FBRWhELGdFQUFnRTtBQUN6RCxNQUFNQyxXQUFXO0lBQ3RCLElBQUk7UUFDRixNQUFNLEVBQUVDLEtBQUssRUFBRUMsTUFBTSxFQUFFLEdBQUcsTUFBTUgseURBQWVBO1FBQy9DLE9BQU87WUFBRUU7WUFBT0M7UUFBTztJQUN6QixFQUFFLE9BQU9DLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLCtCQUErQkE7UUFDN0MsTUFBTUE7SUFDUjtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3Jrc3BhY2UvcGFnZXMvYXBpL3NlcnZlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbml0aWFsaXplQWdlbnQgfSBmcm9tICcuLi8uLi9jaGF0Ym90JztcblxuLy8gSW5pdGlhbGl6ZSBhZ2VudCBvbmNlIGFuZCBleHBvcnQgZm9yIHVzZSBhY3Jvc3MgQVBJIGVuZHBvaW50c1xuZXhwb3J0IGNvbnN0IGdldEFnZW50ID0gYXN5bmMgKCkgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHsgYWdlbnQsIGNvbmZpZyB9ID0gYXdhaXQgaW5pdGlhbGl6ZUFnZW50KCk7XG4gICAgcmV0dXJuIHsgYWdlbnQsIGNvbmZpZyB9O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBpbml0aWFsaXplIGFnZW50OicsIGVycm9yKTtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTtcbiJdLCJuYW1lcyI6WyJpbml0aWFsaXplQWdlbnQiLCJnZXRBZ2VudCIsImFnZW50IiwiY29uZmlnIiwiZXJyb3IiLCJjb25zb2xlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/server.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fchat.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();